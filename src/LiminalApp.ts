// üìÅ src/LiminalApp.ts
// –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è LIMINAL —Å –ø–æ—Ä—Ç–∞–ª–æ–º –≤ Noosphere

import { ParticleSystem } from './components/ParticleSystem';
import { QuantumClock } from './components/QuantumClock';
import { HeartControls } from './components/HeartControls';
import { EmailForm } from './components/EmailForm';
import { DOMHelpers, TimeHelpers } from './utils/helpers';
import { SELECTORS, ANIMATION_CONFIG, MATRIX_CHARS } from './utils/constants';

/**
 * –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è LIMINAL
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –∏ –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º
 */
export class LiminalApp {
  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  private particleSystem: ParticleSystem | null = null;
  private quantumClock: QuantumClock | null = null;
  private heartControls: HeartControls | null = null;
  private emailForm: EmailForm | null = null;

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  private isInitialized: boolean = false;
  private isRunning: boolean = false;
  private startTime: number = 0;

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
  private matrixRainInterval: number = 0;
  private scrollObserver: IntersectionObserver | null = null;

  constructor() {
    this.init();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  private async init(): Promise<void> {
    console.log('üöÄ LiminalApp: Starting initialization...');
    this.startTime = TimeHelpers.now();
    
    try {
      await this.preInitChecks();
      await this.initializeComponents();
      await this.setupAdditionalFeatures();
      await this.bindGlobalEvents();
      
      this.isInitialized = true;
      this.isRunning = true;
      
      const initTime = TimeHelpers.now() - this.startTime;
      console.log(`‚ú® LiminalApp: Initialized successfully in ${initTime}ms`);
      
      this.logWelcomeMessage();
      
    } catch (error) {
      console.error('‚ùå LiminalApp: Initialization failed:', error);
      this.handleInitializationError(error);
    }
  }

  /**
   * –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
   */
  private async preInitChecks(): Promise<void> {
    console.log('üîç LiminalApp: Running pre-init checks...');
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å DOM
    if (document.readyState === 'loading') {
      await new Promise(resolve => {
        document.addEventListener('DOMContentLoaded', resolve);
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    const requiredContainers = [
      SELECTORS.PARTICLES_CONTAINER,
      '.live-clock',
      '.heart-controls',
      SELECTORS.EMAIL_FORM
    ];
    
    const missingContainers = requiredContainers.filter(selector => 
      !DOMHelpers.elementExists(selector)
    );
    
    if (missingContainers.length > 0) {
      console.warn('‚ö†Ô∏è LiminalApp: Missing containers:', missingContainers);
    }
    
    console.log('‚úÖ LiminalApp: Pre-init checks completed');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
   */
  private async initializeComponents(): Promise<void> {
    console.log('‚öôÔ∏è LiminalApp: Initializing components...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    
    // 1. –§–æ–Ω–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (—Å–∞–º—ã–µ —Ç—è–∂–µ–ª—ã–µ)
    await this.initParticleSystem();
    await this.initMatrixRain();
    
    // 2. UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (—Å—Ä–µ–¥–Ω—è—è –Ω–∞–≥—Ä—É–∑–∫–∞)
    await this.initQuantumClock();
    await this.initEmailForm();
    
    // 3. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–ª–µ–≥–∫–∏–µ)
    await this.initHeartControls();
    await this.initScrollAnimations();
    
    // 4. –ù–û–í–û–ï: –ü–æ—Ä—Ç–∞–ª –≤ Noosphere City üåå
    await this.initPortalToNoosphere();
    
    console.log('‚úÖ LiminalApp: All components initialized');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —á–∞—Å—Ç–∏—Ü
   */
  private async initParticleSystem(): Promise<void> {
    try {
      this.particleSystem = new ParticleSystem(
        SELECTORS.PARTICLES_CONTAINER, 
        ANIMATION_CONFIG.PARTICLE_COUNT
      );
      console.log('‚úÖ ParticleSystem initialized');
    } catch (error) {
      console.warn('‚ö†Ô∏è Failed to initialize ParticleSystem:', error);
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Matrix –¥–æ–∂–¥—å
   */
  private async initMatrixRain(): Promise<void> {
    try {
      const matrixContainer = DOMHelpers.getElement('#matrixRain');
      if (matrixContainer) {
        this.startMatrixRain();
        console.log('‚úÖ Matrix rain initialized');
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è Failed to initialize Matrix rain:', error);
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–≤–∞–Ω—Ç–æ–≤—ã–µ —á–∞—Å—ã
   */
  private async initQuantumClock(): Promise<void> {
    try {
      this.quantumClock = new QuantumClock();
      console.log('‚úÖ QuantumClock initialized');
    } catch (error) {
      console.warn('‚ö†Ô∏è Failed to initialize QuantumClock:', error);
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—É email
   */
  private async initEmailForm(): Promise<void> {
    try {
      this.emailForm = new EmailForm();
      console.log('‚úÖ EmailForm initialized');
    } catch (error) {
      console.warn('‚ö†Ô∏è Failed to initialize EmailForm:', error);
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–¥–µ—á–∫–∞–º–∏
   */
  private async initHeartControls(): Promise<void> {
    try {
      this.heartControls = new HeartControls();
      console.log('‚úÖ HeartControls initialized');
    } catch (error) {
      console.warn('‚ö†Ô∏è Failed to initialize HeartControls:', error);
    }
  }

  /**
   * –ù–û–í–û–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ä—Ç–∞–ª –≤ Noosphere City
   */
  private async initPortalToNoosphere(): Promise<void> {
    try {
      this.createPortalButton();
      console.log('‚úÖ Portal to Noosphere City initialized');
    } catch (error) {
      console.warn('‚ö†Ô∏è Failed to initialize Portal:', error);
    }
  }

  /**
   * –ù–û–í–û–ï: –°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ—Ä—Ç–∞–ª–∞
   */
  private createPortalButton(): void {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Ä—Ç–∞–ª–∞
    const portalContainer = DOMHelpers.createElement('div', 'portal-container');
    
    DOMHelpers.addStyles(portalContainer, {
      position: 'fixed',
      bottom: '20px',
      left: '20px',
      zIndex: '9999',
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      gap: '15px'
    });

    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Ä—Ç–∞–ª–∞
    const portalButton = DOMHelpers.createElement('button', 'portal-button');
    portalButton.innerHTML = `
      <div style="font-size: 2rem; margin-bottom: 5px;">üåÜ</div>
      <div style="font-weight: bold; color: #00ffee;">ENTER NOOSPHERE</div>
      <div style="font-size: 0.8rem; color: #c6fff7;">City of Future</div>
    `;

    DOMHelpers.addStyles(portalButton, {
      background: 'linear-gradient(135deg, rgba(0, 255, 238, 0.1), rgba(255, 89, 165, 0.1))',
      border: '2px solid rgba(0, 255, 238, 0.3)',
      borderRadius: '15px',
      padding: '20px',
      color: '#00ffee',
      fontFamily: 'Orbitron, sans-serif',
      cursor: 'pointer',
      transition: 'all 0.3s ease',
      backdropFilter: 'blur(10px)',
      textAlign: 'center',
      minWidth: '180px'
    });

    // –î–æ–±–∞–≤–∏—Ç—å hover —ç—Ñ—Ñ–µ–∫—Ç
    portalButton.addEventListener('mouseenter', () => {
      portalButton.style.borderColor = '#00ffee';
      portalButton.style.boxShadow = '0 0 30px rgba(0, 255, 238, 0.4)';
      portalButton.style.transform = 'translateY(-5px)';
    });

    portalButton.addEventListener('mouseleave', () => {
      portalButton.style.borderColor = 'rgba(0, 255, 238, 0.3)';
      portalButton.style.boxShadow = 'none';
      portalButton.style.transform = 'translateY(0)';
    });

    // –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
    portalButton.addEventListener('click', () => {
      this.activatePortalTransition();
    });

    portalContainer.appendChild(portalButton);
    document.body.appendChild(portalContainer);
  }

  /**
   * –ù–û–í–û–ï: –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç–∞–ª
   */
  private activatePortalTransition(): void {
    console.log('üåå Activating portal to Noosphere City...');
    
    // –°–æ–∑–¥–∞—Ç—å overlay —ç—Ñ—Ñ–µ–∫—Ç
    const overlay = DOMHelpers.createElement('div', 'portal-overlay');
    
    DOMHelpers.addStyles(overlay, {
      position: 'fixed',
      top: '0',
      left: '0',
      width: '100%',
      height: '100%',
      background: 'radial-gradient(circle, transparent, #00ffee)',
      zIndex: '99999',
      opacity: '0',
      transition: 'opacity 2s ease-in-out'
    });

    document.body.appendChild(overlay);

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = DOMHelpers.createElement('div', 'portal-message');
    message.textContent = 'üåå Opening dimensional gateway to Noosphere City...';
    
    DOMHelpers.addStyles(message, {
      position: 'fixed',
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
      background: 'rgba(0, 0, 0, 0.8)',
      color: '#00ffee',
      padding: '20px 40px',
      borderRadius: '10px',
      border: '1px solid #00ffee',
      fontFamily: 'Orbitron, sans-serif',
      fontSize: '1.2rem',
      zIndex: '99998',
      textAlign: 'center'
    });

    document.body.appendChild(message);

    // –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞
    setTimeout(() => {
      overlay.style.opacity = '0.8';
      message.textContent = 'üöÄ Initiating dimensional transfer...';
    }, 1000);

    setTimeout(() => {
      overlay.style.opacity = '1';
      message.textContent = '‚ú® Welcome to Noosphere City!';
    }, 2500);

    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç
    setTimeout(() => {
      window.location.href = 'https://safal207.github.io/noosphere-city/';
    }, 3500);
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
   */
  private async initScrollAnimations(): Promise<void> {
    try {
      this.scrollObserver = new IntersectionObserver(
        (entries) => this.handleScrollIntersection(entries),
        {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        }
      );

      // –ù–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –∞–Ω–∏–º–∏—Ä—É–µ–º—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
      const animatedElements = DOMHelpers.getAllElements('.feature-card, .story-card');
      animatedElements.forEach(element => {
        (element as HTMLElement).style.opacity = '0';
        this.scrollObserver?.observe(element);
      });

      console.log(`‚úÖ Scroll animations initialized for ${animatedElements.length} elements`);
    } catch (error) {
      console.warn('‚ö†Ô∏è Failed to initialize scroll animations:', error);
    }
  }

  /**
   * –ó–∞–ø—É—Å—Ç–∏—Ç—å Matrix –¥–æ–∂–¥—å
   */
  private startMatrixRain(): void {
    const matrixContainer = DOMHelpers.getElement('#matrixRain');
    if (!matrixContainer) return;

    const createMatrixChar = () => {
      const char = DOMHelpers.createElement('div', 'matrix-char');
      char.textContent = MATRIX_CHARS[Math.floor(Math.random() * MATRIX_CHARS.length)];
      
      DOMHelpers.addStyles(char, {
        position: 'absolute',
        left: Math.random() * 100 + '%',
        color: '#00ffee',
        fontFamily: 'Courier New, monospace',
        fontSize: '14px',
        animation: `fall linear ${Math.random() * 3 + 2}s`,
        opacity: Math.random().toString()
      });
      
      matrixContainer.appendChild(char);
      
      // –£–¥–∞–ª–∏—Ç—å —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏
      setTimeout(() => {
        DOMHelpers.removeElement(char);
      }, 5000);
    };

    this.matrixRainInterval = window.setInterval(createMatrixChar, ANIMATION_CONFIG.MATRIX_INTERVAL);
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
   */
  private async setupAdditionalFeatures(): Promise<void> {
    console.log('üîß LiminalApp: Setting up additional features...');
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    this.setupSmoothScroll();
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–∞–∑–∞–º–∏ (–∑–∞–∫—Ä—ã—Ç—å/–æ—Ç–∫—Ä—ã—Ç—å)
    this.setupEyesControls();
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
    this.setupHotkeys();
    
    console.log('‚úÖ Additional features configured');
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–ª–∞–≤–Ω—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É
   */
  private setupSmoothScroll(): void {
    const navLinks = DOMHelpers.getAllElements<HTMLAnchorElement>('a[href^="#"]');
    
    navLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = link.getAttribute('href');
        if (targetId) {
          const target = DOMHelpers.getElement(targetId);
          if (target) {
            target.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        }
      });
    });
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–∞–∑–∞–º–∏
   */
  private setupEyesControls(): void {
    const closeEyesBtn = DOMHelpers.getElement('.close-eyes-btn');
    const openEyesBtn = DOMHelpers.getElement('.open-eyes-btn');
    const overlay = DOMHelpers.getElement('#eyesClosedOverlay');
    
    closeEyesBtn?.addEventListener('click', () => {
      overlay?.classList.add('active');
      closeEyesBtn.classList.add('eyes-closed');
      closeEyesBtn.textContent = 'Eyes Closed';
    });
    
    openEyesBtn?.addEventListener('click', () => {
      overlay?.classList.remove('active');
      closeEyesBtn?.classList.remove('eyes-closed');
      if (closeEyesBtn) closeEyesBtn.textContent = 'Close Eyes';
    });
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
   */
  private setupHotkeys(): void {
    document.addEventListener('keydown', (e) => {
      // Ctrl + H = Heart rain
      if (e.ctrlKey && e.key.toLowerCase() === 'h') {
        e.preventDefault();
        this.heartControls?.startHeartRain(3000);
        console.log('üíñ Heart rain activated via hotkey');
      }
      
      // Ctrl + P = Toggle particles
      if (e.ctrlKey && e.key.toLowerCase() === 'p') {
        e.preventDefault();
        this.toggleParticles();
        console.log('‚ú® Particles toggled via hotkey');
      }

      // –ù–û–í–û–ï: Ctrl + N = Activate portal to Noosphere
      if (e.ctrlKey && e.key.toLowerCase() === 'n') {
        e.preventDefault();
        this.activatePortalTransition();
        console.log('üåå Portal to Noosphere activated via hotkey');
      }
      
      // Escape = Close eyes overlay
      if (e.key === 'Escape') {
        const overlay = DOMHelpers.getElement('#eyesClosedOverlay');
        if (overlay?.classList.contains('active')) {
          overlay.classList.remove('active');
        }
      }
    });
  }

  /**
   * –ü—Ä–∏–≤—è–∑–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
   */
  private async bindGlobalEvents(): Promise<void> {
    console.log('üîó LiminalApp: Binding global events...');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', () => this.handleWindowResize());
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.addEventListener('visibilitychange', () => this.handleVisibilityChange());
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    window.addEventListener('error', (e) => this.handleGlobalError(e));
    
    console.log('‚úÖ Global events bound');
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
   */
  private handleScrollIntersection(entries: IntersectionObserverEntry[]): void {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const element = entry.target as HTMLElement;
        element.style.animation = 'fadeInUp 0.8s ease-out forwards';
      }
    });
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
   */
  private handleWindowResize(): void {
    // –£–≤–µ–¥–æ–º–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞
    this.particleSystem?.setParticleCount(
      window.innerWidth < 768 ? 25 : ANIMATION_CONFIG.PARTICLE_COUNT
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   */
  private handleVisibilityChange(): void {
    if (document.hidden) {
      // –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—è–∂–µ–ª—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      this.pauseHeavyAnimations();
    } else {
      // –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏
      this.resumeHeavyAnimations();
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏
   */
  private handleGlobalError(error: ErrorEvent): void {
    console.error('üö® LiminalApp: Global error:', error.error);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –æ—à–∏–±–æ–∫ –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫—É
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
   */
  private handleInitializationError(error: any): void {
    console.error('üö® LiminalApp: Initialization failed:', error);
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é fallback –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    const body = document.body;
    body.innerHTML = `
      <div style="
        display: flex; 
        align-items: center; 
        justify-content: center; 
        height: 100vh; 
        background: #0f0f0f; 
        color: #ff4444;
        font-family: 'Orbitron', sans-serif;
        text-align: center;
      ">
        <div>
          <h1>üö® Initialization Error</h1>
          <p>Something went wrong while loading LIMINAL.</p>
          <p>Error: ${error.message || 'Unknown error'}</p>
          <button onclick="location.reload()" style="
            padding: 10px 20px; 
            background: #00ffee; 
            border: none; 
            border-radius: 5px; 
            color: #000; 
            font-weight: bold; 
            cursor: pointer; 
            margin-top: 20px;
          ">
            Reload Page
          </button>
        </div>
      </div>
    `;
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —á–∞—Å—Ç–∏—Ü—ã
   */
  private toggleParticles(): void {
    if (this.particleSystem) {
      const stats = this.particleSystem.getStats();
      if (stats.isRunning) {
        this.particleSystem.stop();
      } else {
        this.particleSystem.start();
      }
    }
  }

  /**
   * –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—è–∂–µ–ª—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
   */
  private pauseHeavyAnimations(): void {
    this.particleSystem?.stop();
    if (this.matrixRainInterval) {
      clearInterval(this.matrixRainInterval);
    }
  }

  /**
   * –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Ç—è–∂–µ–ª—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
   */
  private resumeHeavyAnimations(): void {
    this.particleSystem?.start();
    this.startMatrixRain();
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
   */
  private logWelcomeMessage(): void {
    console.log(`
    üåü ====================================== üåü
         WELCOME TO LIMINAL v1.1
    ‚ú® Next-Gen AI Infrastructure Platform ‚ú®
    
    üéÆ Hotkeys:
    ‚Ä¢ Ctrl + H: Heart rain
    ‚Ä¢ Ctrl + P: Toggle particles
    ‚Ä¢ Ctrl + N: Portal to Noosphere City üåå
    ‚Ä¢ Escape: Close overlay
    
    üåå NEW: Dimensional Portal Active!
    Connect to Noosphere City for full experience
    
    üíñ Enjoy the journey through dimensions!
    üåü ====================================== üåü
    `);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  public getAppStats(): {
    isInitialized: boolean;
    isRunning: boolean;
    uptime: number;
    components: {
      particleSystem: any;
      quantumClock: any;
      heartControls: any;
      emailForm: any;
    };
  } {
    return {
      isInitialized: this.isInitialized,
      isRunning: this.isRunning,
      uptime: this.isInitialized ? TimeHelpers.now() - this.startTime : 0,
      components: {
        particleSystem: this.particleSystem?.getStats() || null,
        quantumClock: this.quantumClock?.getStats() || null,
        heartControls: this.heartControls?.getStats() || null,
        emailForm: this.emailForm?.getStats() || null
      }
    };
  }

  /**
   * –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
   */
  public restart(): void {
    console.log('üîÑ LiminalApp: Restarting...');
    this.destroy();
    setTimeout(() => {
      new LiminalApp();
    }, 100);
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
   */
  public destroy(): void {
    console.log('üóëÔ∏è LiminalApp: Destroying...');
    
    // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    this.particleSystem?.destroy();
    this.quantumClock?.destroy();
    this.heartControls?.destroy();
    this.emailForm?.destroy();
    
    // –û—á–∏—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
    if (this.matrixRainInterval) {
      clearInterval(this.matrixRainInterval);
    }
    
    // –û—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å
    this.scrollObserver?.disconnect();
    
    // –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    this.isInitialized = false;
    this.isRunning = false;
    
    console.log('‚úÖ LiminalApp: Destroyed successfully');
  }
}